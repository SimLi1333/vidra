name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  GO111MODULE: "on"
  GOCACHE: ${{ github.workspace }}/.cache/go-build
  GOPATH: ${{ github.workspace }}/.cache/go
  CGO_ENABLED: "0"
  ENVTEST_K8S_VERSION: "1.31.0"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    container: golang:1.24
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: |
            .cache/go
            .cache/go-build
          key: ${{ runner.os }}-go-${{ github.ref_name }}
      - run: go version
      - run: make fmt
      - run: make vet
      - run: make lint

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    container: golang:1.24
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: |
            .cache/go
            .cache/go-build
          key: ${{ runner.os }}-go-${{ github.ref_name }}
      - run: go version
      - run: make fmt
      - run: make vet
      - run: make test
      - name: Save coverage
        run: echo "Saving coverage..."
      - name: Upload coverage.out
        uses: actions/upload-artifact@v3
        with:
          name: cover.out
          path: cover.out
          retention-days: 7

  coverage-report:
    name: Coverage Report
    runs-on: ubuntu-latest
    container: golang:1.24
    needs: unit-test
    if: github.event_name == 'pull_request' || github.ref_name == 'main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download cover.out
        uses: actions/download-artifact@v3
        with:
          name: cover.out

      - name: Install goveralls
        run: go install github.com/mattn/goveralls@v0.0.11

      - name: Generate Coverage Report
        run: |
          go tool cover -func=cover.out
          go tool cover -html=cover.out -o coverage.html

      - name: Extract Coverage Percentage and Generate Badge
        run: |
          apt-get update && apt-get install -y jq
          TOTAL=$(go tool cover -func=cover.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "coverage=$TOTAL" >> $GITHUB_ENV
          echo "Extracted Coverage: $TOTAL%"
          echo "{\"schemaVersion\": 1, \"label\": \"coverage\", \"message\": \"${TOTAL}%\", \"color\": \"green\"}" > coverage-badge.json
          mkdir -p public
          mv coverage-badge.json public/

      - name: Upload HTML Coverage and Raw Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: |
            coverage.html
            cover.out
          retention-days: 7

      - name: Deploy Badge to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
