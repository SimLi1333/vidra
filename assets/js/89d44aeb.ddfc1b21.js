"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1358],{1032:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/vidra/","docId":"introoduction/home","unlisted":false},{"type":"category","label":"Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Features","href":"/vidra/concepts/features","docId":"concepts/features","unlisted":false}],"href":"/vidra/concepts/"},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installing Vidra","href":"/vidra/guides/install","docId":"guides/install","unlisted":false},{"type":"link","label":"Preparing Infrahub","href":"/vidra/guides/infrahub","docId":"guides/infrahub","unlisted":false},{"type":"link","label":"Using Vidra","href":"/vidra/guides/usage","docId":"guides/usage","unlisted":false}]},{"type":"link","label":"API References","href":"/vidra/api-references/","docId":"api-references/api-references","unlisted":false},{"type":"category","label":"Topics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Architecture","href":"/vidra/topics/architecture","docId":"topics/architecture","unlisted":false},{"type":"category","label":"Desicions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Use Markdown Architectural Decision Records","href":"/vidra/topics/desicions/use-markdown-architectural-decision-records","docId":"topics/desicions/use-markdown-architectural-decision-records","unlisted":false},{"type":"link","label":"Creating Two Controllers Which Work Together in a Modular System","href":"/vidra/topics/desicions/creating-two-controller-which-work-together-in-a-modular-system","docId":"topics/desicions/creating-two-controller-which-work-together-in-a-modular-system","unlisted":false},{"type":"link","label":"controller","href":"/vidra/topics/desicions/controller","docId":"topics/desicions/controller","unlisted":false}]},{"type":"link","label":"Contributor Guide","href":"/vidra/topics/contributions","docId":"topics/contributions","unlisted":false},{"type":"link","label":"Coding Conventions","href":"/vidra/topics/coding-conventions","docId":"topics/coding-conventions","unlisted":false},{"type":"link","label":"Cluster Setup","href":"/vidra/topics/deploy","docId":"topics/deploy","unlisted":false},{"type":"link","label":"Testing","href":"/vidra/topics/testing","docId":"topics/testing","unlisted":false},{"type":"link","label":"Continuos Integration","href":"/vidra/topics/ci","docId":"topics/ci","unlisted":false},{"type":"link","label":"Preliminary Work","href":"/vidra/topics/preliminary-work","docId":"topics/preliminary-work","unlisted":false}]},{"type":"link","label":"Comparison","href":"/vidra/comparison/","docId":"comparison/comparison","unlisted":false},{"type":"link","label":"About","href":"/vidra/about/","docId":"about/about","unlisted":false}]},"docs":{"about/about":{"id":"about/about","title":"About","description":"This project was developed as part of a bachelor\'s thesis at the Eastern Switzerland University of Applied Sciences (OST) in Rapperswil, in collaboration with the Institute for Network and Security (INS).","sidebar":"docsSidebar"},"api-references/api-references":{"id":"api-references/api-references","title":"API Reference","description":"Packages","sidebar":"docsSidebar"},"comparison/comparison":{"id":"comparison/comparison","title":"Comparison","description":"Vidra is just one of several open-source tools designed to manage and deploy Kubernetes resources. This comparison provides a concise overview of the key features and philosophies behind ArgoCD and Flux, highlighting where Vidra fits in and what unique value it offers to users.","sidebar":"docsSidebar"},"concepts/concepts":{"id":"concepts/concepts","title":"Concepts","description":"Infrahub","sidebar":"docsSidebar"},"concepts/features":{"id":"concepts/features","title":"Features","description":"Vidra is a Kubernetes operator designed to manage custom resources with flexibility and safety in complex environments. Below is an overview of its core features and ongoing development focus areas.","sidebar":"docsSidebar"},"guides/infrahub":{"id":"guides/infrahub","title":"Preparing Infrahub","description":"","sidebar":"docsSidebar"},"guides/install":{"id":"guides/install","title":"Installing Vidra","description":"","sidebar":"docsSidebar"},"guides/usage":{"id":"guides/usage","title":"Using Vidra","description":"","sidebar":"docsSidebar"},"introoduction/home":{"id":"introoduction/home","title":"Introduction","description":"Vidra a Operator for Infrahub","sidebar":"docsSidebar"},"topics/architecture":{"id":"topics/architecture","title":"Architecture","description":"Introduction","sidebar":"docsSidebar"},"topics/ci":{"id":"topics/ci","title":"Continuos Integration","description":"We use GitHub Actions as our CI/CD tool to automate testing, building, and documentation deployment for the Vidra Operator. Currently, we maintain two main workflows:","sidebar":"docsSidebar"},"topics/coding-conventions":{"id":"topics/coding-conventions","title":"Coding Conventions","description":"We follow the Effective Go guidelines as the foundation for our coding conventions. This document summarizes the most important practices and tools enforced in this project.","sidebar":"docsSidebar"},"topics/contributions":{"id":"topics/contributions","title":"Contributor Guide","description":"Contributions to Vidra Operator are welcome and appreciated! This guide will help you get started with development and testing.","sidebar":"docsSidebar"},"topics/deploy":{"id":"topics/deploy","title":"Cluster Setup","description":"To develop and test the Vidra Operator locally, create a Kubernetes cluster using either minikube or kind. Both tools provide a simple way to run Kubernetes on your machine for day-to-day development tasks.","sidebar":"docsSidebar"},"topics/desicions/controller":{"id":"topics/desicions/controller","title":"controller","description":"","sidebar":"docsSidebar"},"topics/desicions/creating-two-controller-which-work-together-in-a-modular-system":{"id":"topics/desicions/creating-two-controller-which-work-together-in-a-modular-system","title":"Creating Two Controllers Which Work Together in a Modular System","description":"Context and Problem Statement","sidebar":"docsSidebar"},"topics/desicions/use-markdown-architectural-decision-records":{"id":"topics/desicions/use-markdown-architectural-decision-records","title":"Use Markdown Architectural Decision Records","description":"We want to record architectural decisions made throughout the development of the Vidra project. These decisions often involve trade-offs, alternatives, and rationales that should be clearly documented to help current and future contributors understand the reasoning behind the architecture.","sidebar":"docsSidebar"},"topics/preliminary-work":{"id":"topics/preliminary-work","title":"Preliminary Work","description":"While Kubernetes operators and controller frameworks like Kubebuilder are well-established, there has been no prior integration between Infrahub and Kubernetes.","sidebar":"docsSidebar"},"topics/testing":{"id":"topics/testing","title":"Testing","description":"Test Concept","sidebar":"docsSidebar"}}}}')}}]);