"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1481],{6216:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"topics/desicions/gitops","title":"Adopting GitOps Principles for Vidra Operator","description":"Context and Problem Statement","source":"@site/docs/topics/desicions/0008-gitops.md","sourceDirName":"topics/desicions","slug":"/topics/desicions/gitops","permalink":"/vidra/topics/desicions/gitops","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"title":"Adopting GitOps Principles for Vidra Operator","sidebar_position":9},"sidebar":"cliSidebar","previous":{"title":"Decision to Apply Clean Architecture in Vidra Operator","permalink":"/vidra/topics/desicions/clean-architecture"},"next":{"title":"Namespace Handling for Vidra-Managed Resources","permalink":"/vidra/topics/desicions/namespace"}}');var s=n(4848),r=n(8453);const o={title:"Adopting GitOps Principles for Vidra Operator",sidebar_position:9},a="Adopting GitOps Principles for Vidra Operator",d={},c=[{value:"Context and Problem Statement",id:"context-and-problem-statement",level:2},{value:"Considered Options",id:"considered-options",level:2},{value:"Decision Outcome",id:"decision-outcome",level:2},{value:"The Four GitOps Principles",id:"the-four-gitops-principles",level:3},{value:"Consequences",id:"consequences",level:3}];function l(e){const i={a:"a",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"adopting-gitops-principles-for-vidra-operator",children:"Adopting GitOps Principles for Vidra Operator"})}),"\n",(0,s.jsx)(i.h2,{id:"context-and-problem-statement",children:"Context and Problem Statement"}),"\n",(0,s.jsxs)(i.p,{children:["We decided to align our operational and deployment practices with the ",(0,s.jsx)(i.a,{href:"https://opengitops.dev",children:"four principles of GitOps"}),". This decision aims to improve automation, reliability, and transparency in managing the Vidra Operator and its resources."]}),"\n",(0,s.jsx)(i.h2,{id:"considered-options",children:"Considered Options"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Continue with ad-hoc/manual operations"}),(0,s.jsx)(i.br,{}),"\n","Operations are performed manually or with custom scripts, leading to inconsistencies and reduced auditability."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Adopt GitOps principles"}),(0,s.jsx)(i.br,{}),"\n","Operations and desired state are managed declaratively in Infrahub, with automated reconciliation and strong audit trails."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"decision-outcome",children:"Decision Outcome"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:'Chosen option: "Adopt GitOps principles"'}),", because it enables us to manage infrastructure and application state declaratively, automate deployments, and ensure that the cluster state matches the source of truth in Infrahub."]}),"\n",(0,s.jsx)(i.h3,{id:"the-four-gitops-principles",children:"The Four GitOps Principles"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Declarative Descriptions"}),(0,s.jsx)(i.br,{}),"\n","A system managed by GitOps must have its desired state expressed declaratively."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Versioned and Immutable Storage"}),(0,s.jsx)(i.br,{}),"\n","Desired state is stored in a way that enforces immutability, versioning and retains a complete version history."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Automated Reconciliation"}),(0,s.jsx)(i.br,{}),"\n","Software agents automatically pull the desired state declarations from the source."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Continuous Operations"}),(0,s.jsx)(i.br,{}),"\n","Software agents continuously observe actual system state and attempt to apply the desired state."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"consequences",children:"Consequences"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Good, because it increases reliability, auditability, and repeatability of operations."}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>a});var t=n(6540);const s={},r=t.createContext(s);function o(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);