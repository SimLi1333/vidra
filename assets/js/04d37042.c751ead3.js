"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9639],{5596:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"topics/architecture","title":"Vidra CLI Architecture","description":"The Vidra CLI is structured following clean architecture principles, using Go Cobra for command-line parsing and execution.","source":"@site/docs-cli/topics/architecture.md","sourceDirName":"topics","slug":"/topics/architecture","permalink":"/vidra/cli/topics/architecture","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"cliSidebar","previous":{"title":"Usage","permalink":"/vidra/cli/guides/usage"}}');var t=r(4848),s=r(8453);const c={},a="Vidra CLI Architecture",o={},d=[{value:"Folder Structure",id:"folder-structure",level:2},{value:"Architectural Overview",id:"architectural-overview",level:2}];function l(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"vidra-cli-architecture",children:"Vidra CLI Architecture"})}),"\n",(0,t.jsxs)(n.p,{children:["The Vidra CLI is structured following clean architecture principles, using ",(0,t.jsx)(n.a,{href:"https://github.com/spf13/cobra",children:"Go Cobra"})," for command-line parsing and execution."]}),"\n",(0,t.jsx)(n.h2,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"cmd/"})}),(0,t.jsx)(n.br,{}),"\n","Contains all CLI commands and operations. Each command is defined as a separate file or package, leveraging Cobra for argument parsing and command handling."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"internal/service/"})}),(0,t.jsx)(n.br,{}),"\n","Implements the core logic for each command. This layer contains business logic and some tests, ensuring that command implementations remain decoupled from infrastructure concerns."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"internal/adapter/"})}),(0,t.jsx)(n.br,{}),"\n","Provides reusable Kubernetes client (",(0,t.jsx)(n.code,{children:"kubecli"}),") functions. These adapters abstract infrastructure details and are accessed via interfaces, enabling easy mocking and testing."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"architectural-overview",children:"Architectural Overview"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Commands"})," in ",(0,t.jsx)(n.code,{children:"cmd/"})," delegate to ",(0,t.jsx)(n.strong,{children:"services"})," in ",(0,t.jsx)(n.code,{children:"internal/service/"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Services"})," interact with ",(0,t.jsx)(n.strong,{children:"adapters"})," in ",(0,t.jsx)(n.code,{children:"internal/adapter/"})," for Kubernetes operations."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Adapters"})," encapsulate external dependencies, promoting testability and maintainability."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This separation ensures a modular, testable, and maintainable CLI codebase."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>a});var i=r(6540);const t={},s=i.createContext(t);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);