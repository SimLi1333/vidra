"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7555],{7293:(e,n,t)=>{t.d(n,{A:()=>R});var i=t(6540),a=t(4848);function r(e){const{mdxAdmonitionTitle:n,rest:t}=function(e){const n=i.Children.toArray(e),t=n.find((e=>i.isValidElement(e)&&"mdxAdmonitionTitle"===e.type)),r=n.filter((e=>e!==t)),s=t?.props.children;return{mdxAdmonitionTitle:s,rest:r.length>0?(0,a.jsx)(a.Fragment,{children:r}):null}}(e.children),r=e.title??n;return{...e,...r&&{title:r},children:t}}var s=t(4164),o=t(1312),c=t(7559);const l="admonition_xJq3",d="admonitionHeading_Gvgb",u="admonitionIcon_Rf37",h="admonitionContent_BuS1";function f({type:e,className:n,children:t}){return(0,a.jsx)("div",{className:(0,s.A)(c.G.common.admonition,c.G.common.admonitionType(e),l,n),children:t})}function p({icon:e,title:n}){return(0,a.jsxs)("div",{className:d,children:[(0,a.jsx)("span",{className:u,children:e}),n]})}function m({children:e}){return e?(0,a.jsx)("div",{className:h,children:e}):null}function x(e){const{type:n,icon:t,title:i,children:r,className:s}=e;return(0,a.jsxs)(f,{type:n,className:s,children:[i||t?(0,a.jsx)(p,{title:i,icon:t}):null,(0,a.jsx)(m,{children:r})]})}function g(e){return(0,a.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,a.jsx)("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})})}const j={icon:(0,a.jsx)(g,{}),title:(0,a.jsx)(o.A,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)",children:"note"})};function b(e){return(0,a.jsx)(x,{...j,...e,className:(0,s.A)("alert alert--secondary",e.className),children:e.children})}function y(e){return(0,a.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,a.jsx)("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})})}const v={icon:(0,a.jsx)(y,{}),title:(0,a.jsx)(o.A,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)",children:"tip"})};function w(e){return(0,a.jsx)(x,{...v,...e,className:(0,s.A)("alert alert--success",e.className),children:e.children})}function I(e){return(0,a.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,a.jsx)("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})})}const A={icon:(0,a.jsx)(I,{}),title:(0,a.jsx)(o.A,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)",children:"info"})};function N(e){return(0,a.jsx)(x,{...A,...e,className:(0,s.A)("alert alert--info",e.className),children:e.children})}function k(e){return(0,a.jsx)("svg",{viewBox:"0 0 16 16",...e,children:(0,a.jsx)("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})})}const T={icon:(0,a.jsx)(k,{}),title:(0,a.jsx)(o.A,{id:"theme.admonition.warning",description:"The default label used for the Warning admonition (:::warning)",children:"warning"})};function C(e){return(0,a.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,a.jsx)("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})})}const S={icon:(0,a.jsx)(C,{}),title:(0,a.jsx)(o.A,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)",children:"danger"})};const M={icon:(0,a.jsx)(k,{}),title:(0,a.jsx)(o.A,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)",children:"caution"})};const V={...{note:b,tip:w,info:N,warning:function(e){return(0,a.jsx)(x,{...T,...e,className:(0,s.A)("alert alert--warning",e.className),children:e.children})},danger:function(e){return(0,a.jsx)(x,{...S,...e,className:(0,s.A)("alert alert--danger",e.className),children:e.children})}},...{secondary:e=>(0,a.jsx)(b,{title:"secondary",...e}),important:e=>(0,a.jsx)(N,{title:"important",...e}),success:e=>(0,a.jsx)(w,{title:"success",...e}),caution:function(e){return(0,a.jsx)(x,{...M,...e,className:(0,s.A)("alert alert--warning",e.className),children:e.children})}}};function R(e){const n=r(e),t=(i=n.type,V[i]||(console.warn(`No admonition component found for admonition type "${i}". Using Info as fallback.`),V.info));var i;return(0,a.jsx)(t,{...n})}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(6540);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}},8611:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"guides/usage","title":"Using Vidra","description":"Introduction","source":"@site/docs/guides/usage.md","sourceDirName":"guides","slug":"/guides/usage","permalink":"/vidra/guides/usage","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Using Vidra","sidebar_position":3},"sidebar":"cliSidebar","previous":{"title":"Preparing Infrahub","permalink":"/vidra/guides/infrahub"},"next":{"title":"Advanced Usage","permalink":"/vidra/guides/advanced-usage"}}');var a=t(4848),r=t(8453),s=t(7293);const o={title:"Using Vidra",sidebar_position:3},c=void 0,l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Configuring Vidra",id:"configuring-vidra",level:2},{value:"Applying the ConfigMap",id:"applying-the-configmap",level:3},{value:"Creating a <code>infrahub-credentials</code> Secret",id:"creating-a-infrahub-credentials-secret",level:2},{value:"Applying the Secret",id:"applying-the-secret",level:3},{value:"Creating an <code>InfrahubSync</code> Resource",id:"creating-an-infrahubsync-resource",level:2},{value:"Applying the InfrahubSync Resource",id:"applying-the-infrahubsync-resource",level:3}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsx)(n.p,{children:"This guide will walk you through the basic configuration and usage of Vidra."}),"\n",(0,a.jsx)(s.A,{type:"warning",title:"Warning",children:(0,a.jsxs)(n.p,{children:["A running Kubernetes cluster with the Vidra operator installed is required. If you haven't installed the Vidra operator yet, please refer to the ",(0,a.jsx)(n.a,{href:"/vidra/guides/install",children:"installation guide"}),"."]})}),"\n",(0,a.jsx)(s.A,{type:"note",title:"Note",children:(0,a.jsxs)(n.p,{children:["All these configurations can also be done using the CLI tool for Vidra. The CLI tool provides a convenient way to manage Vidra resources and configurations. You can find more information about the CLI tool in the ",(0,a.jsx)(n.a,{href:"/cli",children:"CLI documentation"}),"."]})}),"\n",(0,a.jsx)(n.h2,{id:"configuring-vidra",children:"Configuring Vidra"}),"\n",(0,a.jsx)(n.p,{children:"Vidra uses a ConfigMap to manage its configuration. Below is an example ConfigMap you can use as a starting point:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: ConfigMap\nmetadata:\n    name: vidra-config\n    labels:\n        app: vidra # Important: This label is used to identify the operator\'s resources.\n    namespace: vidra-system\ndata:\n    requeueSyncAfter: "1m" # How often Vidra syncs with Infrahub. (if you do not want to use the default value of 1 minute)\n    requeueRecourcesAfter: "1m" # How often managed resources are being reconciled. (if you do not want to use the default value of 10 minutes)\n    queryName: "ArtifactIDs" # Infrahub graphQL query name for geting Artifact IDs. (if you do not want to use the default value of "ArtifactIDs")\n    eventBasedReconcile: "true" # Enable event-based reconciliation. (default is false)\n'})}),"\n",(0,a.jsx)(s.A,{type:"note",title:"Note",children:(0,a.jsx)(n.p,{children:"All the fields in the ConfigMap are optional and can be customized according to your needs. If you do not specify a field, Vidra will use its default values."})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"Requeue"}),' values are specified as positive duration strings. A duration is a sequence of decimal numbers with optional fractions and a unit suffix, such as "300ms" or "2h45m". Valid time units are "ns", "us" (or "\xb5s"), "ms", "s", "m", and "h". Negative durations are not allowed and will be ignored. Setting a value to ',(0,a.jsx)(n.code,{children:"0"})," disables requeueing for that resource (e.g., for maintenance)."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"requeueRecourcesAfter"}),' is disabled if you set eventBasedReconcile: "true" as it will use the Kubernetes event system to trigger reconciliations instead of a time-based requeue.']}),"\n",(0,a.jsx)(s.A,{type:"note",title:"Note",children:(0,a.jsxs)(n.p,{children:["If you want to use a different namespace than ",(0,a.jsx)(n.code,{children:"vidra-system"}),", make sure to adjust the ",(0,a.jsx)(n.code,{children:"namespace"})," field in the metadata section accordingly. Vidra will find the ConfigMap based on the label ",(0,a.jsx)(n.code,{children:"app: vidra"}),"."]})}),"\n",(0,a.jsx)(n.h3,{id:"applying-the-configmap",children:"Applying the ConfigMap"}),"\n",(0,a.jsxs)(n.p,{children:["To apply the configuration, save the above YAML to a file (e.g., ",(0,a.jsx)(n.code,{children:"vidra-config.yaml"}),") and run:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"kubectl apply -f vidra-config.yaml\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"creating-a-infrahub-credentials-secret",children:["Creating a ",(0,a.jsx)(n.code,{children:"infrahub-credentials"})," Secret"]}),"\n",(0,a.jsxs)(n.p,{children:["To authenticate with your Infrahub, you need to create a Kubernetes Secret containing your Infrahub API credentials. The Secret should be contain the label ",(0,a.jsx)(n.code,{children:"infrahub-api-url"})," with the URL of your Infrahub instance. Below is an example of how to create this Secret:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Secret\nmetadata:\n  name: infrahub-credentials\n  namespace: vidra-system\n  labels:\n    infrahub-api-url: "198.19.248.5" # Important: This label is used to identify the operator\'s resources.\ndata:\n  username: YWRtaW4=\n  password: aW5mcmFodWI=\n'})}),"\n",(0,a.jsxs)(s.A,{type:"note",title:"Note",children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"username"})," and ",(0,a.jsx)(n.code,{children:"password"})," fields should contain your Infrahub API credentials, encoded in base64. You can use the following command to encode your credentials:"]}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"MacOS/Linux:"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"echo -n <value> | base64\n"})}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Windows:"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-Python",children:"python -c 'import base64; print(base64.b64encode(b\"<value>\").decode())' \n"})})]}),"\n",(0,a.jsxs)(n.p,{children:["The label ",(0,a.jsx)(n.code,{children:"infrahub-api-url"})," is used to identify the Infrahub instance that the Vidra operator should connect to. Make sure to replace the value with your actual Infrahub API URL or IP.\n",(0,a.jsx)(n.strong,{children:"Example:"})," The URL must look like ",(0,a.jsx)(n.code,{children:"infrahub-server.infrahub.orb.local"})," if your Infrahub is accessible at ",(0,a.jsx)(n.code,{children:"https://infrahub-server.infrahub.orb.local"}),", since Kubernetes does not allow ",(0,a.jsx)(n.code,{children:"/"})," in labels."]}),"\n",(0,a.jsx)(s.A,{type:"note",title:"Note",children:(0,a.jsxs)(n.p,{children:["If you need to connect to different Infrahub instances, you can create multiple Secrets with different ",(0,a.jsx)(n.code,{children:"infrahub-api-url"})," labels. The Vidra operator will use the Secret that matches the label of the ",(0,a.jsx)(n.code,{children:"InfrahubSync"})," resource."]})}),"\n",(0,a.jsx)(s.A,{type:"note",title:"Note",children:(0,a.jsxs)(n.p,{children:["If you want to use a different namespace than ",(0,a.jsx)(n.code,{children:"vidra-system"}),", make sure to adjust the ",(0,a.jsx)(n.code,{children:"namespace"})," field in the metadata section accordingly. Vidra will find the Secret based on the label ",(0,a.jsx)(n.code,{children:"infrahub-api-url"}),"."]})}),"\n",(0,a.jsx)(n.h3,{id:"applying-the-secret",children:"Applying the Secret"}),"\n",(0,a.jsxs)(n.p,{children:["To apply the configuration, save the above YAML to a file (e.g., ",(0,a.jsx)(n.code,{children:"infrahub-secret.yaml"}),") and run:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"kubectl apply -f infrahub-secret.yaml\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.h2,{id:"creating-an-infrahubsync-resource",children:["Creating an ",(0,a.jsx)(n.code,{children:"InfrahubSync"})," Resource"]}),"\n",(0,a.jsxs)(n.p,{children:["To synchronize resources from Infrahub, you need to create an ",(0,a.jsx)(n.code,{children:"InfrahubSync"})," resource. Below is an example of how to create this resource:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: infrahub.operators.com/v1alpha1\nkind: InfrahubSync\nmetadata:\n  name: sync-test-webserver\n  labels:\n    app.kubernetes.io/name: vidra\n    app.kubernetes.io/managed-by: kustomize\nspec:\n  source:\n    infrahubAPIURL: "https://infrahub-server.infrahub.orb.local" # The URL of your Infrahub instance.\n    targetBranch: "main" # Optional: The branch in Infrahub to query for Artifacts.\n    targetDate: "2025-04-09T00:00:00Z" # Optional: The date to query for Artifacts. If not set, the latest branch is used.\n    artefactName: "Webserver_Manifest" # Name of the Artifact Definition in Infrahub to query for Artifacts containing k8s manifests.\n  destination:\n    server: \'https://k8s-cldop-test-0.network.garden:6443\' # Optional: The URL of the Kubernetes cluster where the resources should be applied (Multi-cluster mode). If set to "https://kubernetes.default.svc" or not set at all, the current cluster is used. \n    namespace: \'default\' # Optional: The namespace in the destination cluster which is used as fallback if the managed resources do not have a namespace defined. If not set, the default namespace is used.\n    reconcileOnEvents: true # Optional: If set to true, all managed resources in this sync will be reconciled on events (e.g., creation, update, deletion) instead of a time-based requeue. Default is false.\n'})}),"\n",(0,a.jsx)(s.A,{type:"note",title:"Note",children:(0,a.jsxs)(n.p,{children:["If you want to synchronize multiple Artefact Definitions (like Webserver and VirtualMachines), you can create multiple ",(0,a.jsx)(n.code,{children:"InfrahubSync"})," resources with different ",(0,a.jsx)(n.code,{children:"artefactName"})," values."]})}),"\n",(0,a.jsx)(s.A,{type:"note",title:"Note",children:(0,a.jsxs)(n.p,{children:["If you want to use a different namespace, make sure to add the ",(0,a.jsx)(n.code,{children:"namespace"})," field in the metadata section accordingly. Vidra will find the ",(0,a.jsx)(n.code,{children:"InfrahubSync"})," resource based on it Kind."]})}),"\n",(0,a.jsx)(n.h3,{id:"applying-the-infrahubsync-resource",children:"Applying the InfrahubSync Resource"}),"\n",(0,a.jsxs)(n.p,{children:["To apply the ",(0,a.jsx)(n.code,{children:"InfrahubSync"})," resource, save the above YAML to a file (e.g., ",(0,a.jsx)(n.code,{children:"infrahub-sync.yaml"}),") and run:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"kubectl apply -f infrahub-sync.yaml\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"InfrahubSync"})," resource will trigger the Vidra operator to start synchronizing resources from Infrahub based on the specified query and parameters. You can monitor the status of the synchronization by checking the status of the ",(0,a.jsx)(n.code,{children:"InfrahubSync"})," resource:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"kubectl get infrahubsync sync-test-webserver -o jsonpath='{.status}'\n"})}),"\n",(0,a.jsx)(s.A,{type:"note",title:"Note",children:(0,a.jsxs)(n.p,{children:["If you use the ",(0,a.jsx)(n.code,{children:"destination.server"})," field to specify a different Kubernetes cluster, make sure to create a Kubernetes Secret with the kubeconfig for that cluster, as described in the ",(0,a.jsx)(n.a,{href:"advanced-usage#multi-cluster-mode",children:"Multi-Cluster Mode"})," section."]})}),"\n",(0,a.jsx)(s.A,{type:"note",title:"Note",children:(0,a.jsxs)(n.p,{children:["Some sample resources of Vidra which we used can be found in the ",(0,a.jsx)(n.a,{href:"https://github.com/infrahub-operator/vidra/tree/main/config/samples",children:"config samples directory"}),"."]})}),"\n",(0,a.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);