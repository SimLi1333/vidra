"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4479],{697:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"topics/testing","title":"Testing","description":"Test Concept","source":"@site/docs/topics/testing.mdx","sourceDirName":"topics","slug":"/topics/testing","permalink":"/vidra/topics/testing","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Testing","sidebar_position":6},"sidebar":"docsSidebar","previous":{"title":"Cluster Setup","permalink":"/vidra/topics/deploy"},"next":{"title":"Continuos Integration","permalink":"/vidra/topics/ci"}}');var s=t(4848),r=t(8453),o=t(2362);const a={title:"Testing",sidebar_position:6},l="Vidra Operator Testing Strategy",c={},d=[{value:"Test Concept",id:"test-concept",level:2},{value:"Test Categories",id:"test-categories",level:2},{value:"Tools",id:"tools",level:2},{value:"Strategies: Test Approach",id:"strategies-test-approach",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Integration Tests",id:"integration-tests",level:3},{value:"Test Coverage Goals",id:"test-coverage-goals",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"vidra-operator-testing-strategy",children:"Vidra Operator Testing Strategy"})}),"\n",(0,s.jsx)(n.h2,{id:"test-concept",children:"Test Concept"}),"\n",(0,s.jsxs)(n.p,{children:["This document outlines the approaches, methodologies, and types of tests that ensure that the ",(0,s.jsx)(n.strong,{children:"Vidra Operator"})," components are functioning as expected."]}),"\n",(0,s.jsx)(n.p,{children:"The primary goal of testing is to maintain a high level of code reliability and confidence when integrating changes. We aim to build a robust test suite that supports both fast local iteration and CI-based validation."}),"\n",(0,s.jsx)(n.h2,{id:"test-categories",children:"Test Categories"}),"\n",(0,s.jsx)(n.p,{children:"The current focus of our testing strategy is on:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Functionality"}),": Ensuring that the Vidra Operator behaves correctly under different conditions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Logic"}),": Verifying that business logic and reconciliation workflows operate as expected."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Future test categories may include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Security Testing"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Performance and Load Testing"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"tools",children:"Tools"}),"\n",(0,s.jsx)(n.p,{children:"We use the following tools and frameworks to test the Vidra Operator:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Go ",(0,s.jsx)(n.code,{children:"testing"})," package"]}),": The standard Go testing library used as a foundation for automated test cases."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ginkgo"}),": A BDD-style Go testing framework that enables expressive and structured test suites."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Gomega"}),": A matcher/assertion library used with Ginkgo to write clear and readable expectations in tests."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"EnvTest"}),": A part of the ",(0,s.jsx)(n.code,{children:"controller-runtime"})," library that spins up a local Kubernetes API server and etcd for testing purposes. This is particularly useful for integration and controller-level tests."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Kubernetes Client Libraries"}),": Used to interact with the Kubernetes API, allowing tests to create, update, and delete resources as needed."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mockgen"}),": A tool for generating mock implementations of interfaces, which can be used to isolate components during testing."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fake Clients"}),": Used to simulate a second Kubernetes API for testing purposes, allowing us to test interactions without requiring a second envtest cluster just for the multicluster feature."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"More details on the rationale behind tool selection can be found in the internal [Testing Framework Decision] document (link TBD)."}),"\n",(0,s.jsx)(n.h2,{id:"strategies-test-approach",children:"Strategies: Test Approach"}),"\n",(0,s.jsx)(n.p,{children:"Our testing approach is divided into two primary types:"}),"\n",(0,s.jsx)(n.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,s.jsxs)(n.p,{children:["Unit tests in the Vidra Operator are implemented using the ",(0,s.jsx)(n.code,{children:"envtest"})," environment from ",(0,s.jsx)(n.code,{children:"controller-runtime"}),". While ",(0,s.jsx)(n.code,{children:"envtest"})," is typically used for integration testing, we leverage it even for isolated logic tests to provide realistic API interactions without requiring mocking or fake clients."]}),"\n",(0,s.jsx)(n.p,{children:"This approach allows us to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Test reconciliation logic and Kubernetes resource interactions against a real API server and etcd."}),"\n",(0,s.jsx)(n.li,{children:"Avoid discrepancies between fake clients and real controller behavior."}),"\n",(0,s.jsx)(n.li,{children:"Maintain higher confidence in test accuracy, especially when working with CRDs and status updates."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Tests remain lightweight and fast due to ",(0,s.jsx)(n.code,{children:"envtest"}),"\u2019s in-memory setup, making them practical for local development and CI validation."]}),"\n",(0,s.jsx)(n.h3,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,s.jsx)(n.p,{children:"Integration tests verify that multiple components of the operator work correctly when interacting with a real (but local and temporary) Kubernetes API server. These tests use:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"EnvTest"}),", which provides a lightweight Kubernetes environment via embedded etcd and API server."]}),"\n",(0,s.jsx)(n.li,{children:"Real CRs and controller managers to closely mimic production behavior."}),"\n",(0,s.jsx)(n.li,{children:"Gomega matchers for clear, expressive assertions."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Integration tests are typically written using Ginkgo and structured to simulate realistic lifecycle operations, such as:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Creating and reconciling custom resources"}),"\n",(0,s.jsx)(n.li,{children:"Observing status updates"}),"\n",(0,s.jsx)(n.li,{children:"Validating interactions between controllers and the Kubernetes API"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"We recommend running integration tests as part of CI pipelines or local smoke tests."}),"\n",(0,s.jsx)(n.h2,{id:"test-coverage-goals",children:"Test Coverage Goals"}),"\n",(0,s.jsxs)(n.p,{children:["We aim to maintain at least ",(0,s.jsx)(n.strong,{children:"80% test coverage"})," for the Vidra Operator. Achieving this level of coverage helps ensure:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stability over time"}),"\n",(0,s.jsx)(n.li,{children:"Safe refactoring and maintenance"}),"\n",(0,s.jsx)(n.li,{children:"Quick feedback cycles in development"}),"\n",(0,s.jsx)(n.li,{children:"No need to test every error catch block, but rather focus on critical paths and business logic"}),"\n",(0,s.jsxs)(n.li,{children:["Rather than chacing 100% coverage, we prioritize testing business logic like runing all ",(0,s.jsx)(n.code,{children:"VidraResource"})," reconciliation tests again for the multicluster feature, ensuring that the core functionality remains intact."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Coverage reports are generated and published in CI for visibility and enforcement."}),"\n",(0,s.jsxs)(o.A,{type:"note",title:"Local Coverage Check",children:[(0,s.jsx)(n.p,{children:"A local visual coverage can be checked using:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"make test\ngo tool cover -html=cover.out\n"})})]}),"\n",(0,s.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},2362:(e,n,t)=>{t.d(n,{A:()=>V});var i=t(6540),s=t(4848);function r(e){const{mdxAdmonitionTitle:n,rest:t}=function(e){const n=i.Children.toArray(e),t=n.find((e=>i.isValidElement(e)&&"mdxAdmonitionTitle"===e.type)),r=n.filter((e=>e!==t)),o=t?.props.children;return{mdxAdmonitionTitle:o,rest:r.length>0?(0,s.jsx)(s.Fragment,{children:r}):null}}(e.children),r=e.title??n;return{...e,...r&&{title:r},children:t}}var o=t(4164),a=t(539),l=t(204);const c="admonition_xJq3",d="admonitionHeading_Gvgb",h="admonitionIcon_Rf37",u="admonitionContent_BuS1";function g({type:e,className:n,children:t}){return(0,s.jsx)("div",{className:(0,o.A)(l.G.common.admonition,l.G.common.admonitionType(e),c,n),children:t})}function p({icon:e,title:n}){return(0,s.jsxs)("div",{className:d,children:[(0,s.jsx)("span",{className:h,children:e}),n]})}function x({children:e}){return e?(0,s.jsx)("div",{className:u,children:e}):null}function m(e){const{type:n,icon:t,title:i,children:r,className:o}=e;return(0,s.jsxs)(g,{type:n,className:o,children:[i||t?(0,s.jsx)(p,{title:i,icon:t}):null,(0,s.jsx)(x,{children:r})]})}function j(e){return(0,s.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,s.jsx)("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})})}const f={icon:(0,s.jsx)(j,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)",children:"note"})};function v(e){return(0,s.jsx)(m,{...f,...e,className:(0,o.A)("alert alert--secondary",e.className),children:e.children})}function b(e){return(0,s.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,s.jsx)("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})})}const y={icon:(0,s.jsx)(b,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)",children:"tip"})};function T(e){return(0,s.jsx)(m,{...y,...e,className:(0,o.A)("alert alert--success",e.className),children:e.children})}function w(e){return(0,s.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,s.jsx)("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})})}const A={icon:(0,s.jsx)(w,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)",children:"info"})};function C(e){return(0,s.jsx)(m,{...A,...e,className:(0,o.A)("alert alert--info",e.className),children:e.children})}function k(e){return(0,s.jsx)("svg",{viewBox:"0 0 16 16",...e,children:(0,s.jsx)("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})})}const N={icon:(0,s.jsx)(k,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.warning",description:"The default label used for the Warning admonition (:::warning)",children:"warning"})};function I(e){return(0,s.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,s.jsx)("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})})}const z={icon:(0,s.jsx)(I,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)",children:"danger"})};const M={icon:(0,s.jsx)(k,{}),title:(0,s.jsx)(a.A,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)",children:"caution"})};const R={...{note:v,tip:T,info:C,warning:function(e){return(0,s.jsx)(m,{...N,...e,className:(0,o.A)("alert alert--warning",e.className),children:e.children})},danger:function(e){return(0,s.jsx)(m,{...z,...e,className:(0,o.A)("alert alert--danger",e.className),children:e.children})}},...{secondary:e=>(0,s.jsx)(v,{title:"secondary",...e}),important:e=>(0,s.jsx)(C,{title:"important",...e}),success:e=>(0,s.jsx)(T,{title:"success",...e}),caution:function(e){return(0,s.jsx)(m,{...M,...e,className:(0,o.A)("alert alert--warning",e.className),children:e.children})}}};function V(e){const n=r(e),t=(i=n.type,R[i]||(console.warn(`No admonition component found for admonition type "${i}". Using Info as fallback.`),R.info));var i;return(0,s.jsx)(t,{...n})}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);